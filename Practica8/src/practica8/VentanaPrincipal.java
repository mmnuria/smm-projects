/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package practica8;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.Iterator;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.filechooser.FileNameExtensionFilter;
import sm.nmm.graficos.NHerramientaDibujo;
import sm.nmm.graficos.NShape;
import sm.nmm.iu.Lienzo2D;

/**
 *
 * @author mmnuria
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        this.setSize(700, 700);

    }

    private Lienzo2D getSelectedLienzo() {
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        return vi != null ? vi.getLienzo2D() : null;
    }
    
    private String getFileExtension(File f) {
        String extension = "";
        String filename = f.getName();
        int i = filename.lastIndexOf('.');
        if (i > 0) {
            extension = filename.substring(i + 1);
        }
        return extension;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupFiguras = new javax.swing.ButtonGroup();
        buttonGroupArchivo = new javax.swing.ButtonGroup();
        jToolBar1 = new javax.swing.JToolBar();
        buttonNuevo = new javax.swing.JToggleButton();
        buttonAbrir = new javax.swing.JToggleButton();
        buttonGuardar = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        buttonLinea = new javax.swing.JToggleButton();
        buttonRectangulo = new javax.swing.JToggleButton();
        buttonElipse = new javax.swing.JToggleButton();
        buttonCurva = new javax.swing.JToggleButton();
        buttonEdicion = new javax.swing.JToggleButton();
        buttonFijar = new javax.swing.JToggleButton();
        buttonBorrar = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        panelColor = new javax.swing.JPanel();
        buttonColor = new javax.swing.JButton();
        buttonRellenar = new javax.swing.JToggleButton();
        buttonTransparencia = new javax.swing.JToggleButton();
        buttonAlisar = new javax.swing.JToggleButton();
        slider = new javax.swing.JSlider();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        PanelSur = new javax.swing.JPanel();
        panelBarraEstado = new javax.swing.JPanel();
        LabelBarraDeEstado = new javax.swing.JLabel();
        escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        ItemNuevo = new javax.swing.JMenuItem();
        ItemAbrir = new javax.swing.JMenuItem();
        ItemGuardar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        buttonGroupArchivo.add(buttonNuevo);
        buttonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/nuevo.png"))); // NOI18N
        buttonNuevo.setFocusable(false);
        buttonNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonNuevo);

        buttonGroupArchivo.add(buttonAbrir);
        buttonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/abrir.png"))); // NOI18N
        buttonAbrir.setFocusable(false);
        buttonAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAbrirActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonAbrir);

        buttonGroupArchivo.add(buttonGuardar);
        buttonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/guardar.png"))); // NOI18N
        buttonGuardar.setFocusable(false);
        buttonGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonGuardar);
        jToolBar1.add(jSeparator2);

        buttonGroupFiguras.add(buttonLinea);
        buttonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/linea.png"))); // NOI18N
        buttonLinea.setSelected(true);
        buttonLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLineaActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonLinea);
        buttonLinea.getAccessibleContext().setAccessibleDescription("");

        buttonGroupFiguras.add(buttonRectangulo);
        buttonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/rectangulo.png"))); // NOI18N
        buttonRectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRectanguloActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonRectangulo);
        buttonRectangulo.getAccessibleContext().setAccessibleDescription("");

        buttonGroupFiguras.add(buttonElipse);
        buttonElipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/elipse.png"))); // NOI18N
        buttonElipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonElipseActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonElipse);

        buttonGroupFiguras.add(buttonCurva);
        buttonCurva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/curva.png"))); // NOI18N
        buttonCurva.setFocusable(false);
        buttonCurva.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonCurva.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonCurva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCurvaActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonCurva);

        buttonGroupFiguras.add(buttonEdicion);
        buttonEdicion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/seleccion.png"))); // NOI18N
        buttonEdicion.setFocusable(false);
        buttonEdicion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonEdicion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonEdicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEdicionActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonEdicion);

        buttonGroupFiguras.add(buttonFijar);
        buttonFijar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/fijar.png"))); // NOI18N
        buttonFijar.setFocusable(false);
        buttonFijar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonFijar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonFijar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFijarActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonFijar);

        buttonGroupFiguras.add(buttonBorrar);
        buttonBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/eliminar.png"))); // NOI18N
        buttonBorrar.setFocusable(false);
        buttonBorrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonBorrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBorrarActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonBorrar);
        jToolBar1.add(jSeparator1);

        panelColor.setMaximumSize(new java.awt.Dimension(30, 30));
        panelColor.setPreferredSize(new java.awt.Dimension(30, 30));
        panelColor.setLayout(new java.awt.BorderLayout());

        buttonColor.setBackground(new java.awt.Color(0, 0, 0));
        buttonColor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonColor.setMaximumSize(new java.awt.Dimension(25, 25));
        buttonColor.setMinimumSize(new java.awt.Dimension(20, 20));
        buttonColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonColorActionPerformed(evt);
            }
        });
        panelColor.add(buttonColor, java.awt.BorderLayout.CENTER);

        jToolBar1.add(panelColor);

        buttonRellenar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/rellenar.png"))); // NOI18N
        buttonRellenar.setFocusable(false);
        buttonRellenar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonRellenar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonRellenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRellenarActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonRellenar);

        buttonTransparencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/transparencia.png"))); // NOI18N
        buttonTransparencia.setFocusable(false);
        buttonTransparencia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonTransparencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonTransparencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTransparenciaActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonTransparencia);

        buttonAlisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/alisar.png"))); // NOI18N
        buttonAlisar.setFocusable(false);
        buttonAlisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonAlisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonAlisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAlisarActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonAlisar);

        slider.setMinimum(1);
        slider.setSnapToTicks(true);
        slider.setValue(1);
        slider.setMaximumSize(new java.awt.Dimension(20, 20));
        slider.setPreferredSize(new java.awt.Dimension(50, 50));
        slider.setSize(new java.awt.Dimension(100, 20));
        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });
        jToolBar1.add(slider);
        jToolBar1.add(jSeparator3);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        PanelSur.setLayout(new java.awt.BorderLayout());

        LabelBarraDeEstado.setText("Barra de estado");

        javax.swing.GroupLayout panelBarraEstadoLayout = new javax.swing.GroupLayout(panelBarraEstado);
        panelBarraEstado.setLayout(panelBarraEstadoLayout);
        panelBarraEstadoLayout.setHorizontalGroup(
            panelBarraEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBarraEstadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelBarraDeEstado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBarraEstadoLayout.setVerticalGroup(
            panelBarraEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBarraEstadoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(LabelBarraDeEstado))
        );

        PanelSur.add(panelBarraEstado, java.awt.BorderLayout.SOUTH);

        getContentPane().add(PanelSur, java.awt.BorderLayout.PAGE_END);

        escritorio.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                escritorioMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 741, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );

        getContentPane().add(escritorio, java.awt.BorderLayout.CENTER);

        menuArchivo.setText("Archivo");

        ItemNuevo.setText("Nuevo");
        ItemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemNuevoActionPerformed(evt);
            }
        });
        menuArchivo.add(ItemNuevo);

        ItemAbrir.setText("Abrir");
        ItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemAbrirActionPerformed(evt);
            }
        });
        menuArchivo.add(ItemAbrir);

        ItemGuardar.setText("Guardar");
        ItemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemGuardarActionPerformed(evt);
            }
        });
        menuArchivo.add(ItemGuardar);

        jMenuBar1.add(menuArchivo);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLineaActionPerformed
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setHerramientaDibujo(NHerramientaDibujo.linea);
        }
        LabelBarraDeEstado.setText("Linea");
    }//GEN-LAST:event_buttonLineaActionPerformed

    private void buttonRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRectanguloActionPerformed
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setHerramientaDibujo(NHerramientaDibujo.rectangulo);
        }
        LabelBarraDeEstado.setText("Rectangulo");
    }//GEN-LAST:event_buttonRectanguloActionPerformed

    private void buttonElipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonElipseActionPerformed
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setHerramientaDibujo(NHerramientaDibujo.elipse);
        }
        LabelBarraDeEstado.setText("Elipse");
    }//GEN-LAST:event_buttonElipseActionPerformed

    private void ItemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemNuevoActionPerformed
        String width = JOptionPane.showInputDialog(this, "Introduce el ancho de la imagen:");
        String height = JOptionPane.showInputDialog(this, "Introduce el alto de la imagen:");

        try {
            int w = Integer.parseInt(width);
            int h = Integer.parseInt(height);
            VentanaInterna vi = new VentanaInterna();
            escritorio.add(vi);
            vi.setVisible(true);
            vi.addInternalFrameListener(new ManejadorVentanaInterna());

            BufferedImage img = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
            Graphics2D g = (Graphics2D) img.getGraphics();
            g.setColor(Color.gray);
            g.fillRect(0, 0, w, h);

            vi.getLienzo2D().setImage(img);

            // Cargar sonidos
            File f = new File(getClass().getResource("/sonidos/fijar.wav").getFile());
            vi.getLienzo2D().setSonidoFijar(f);
            f = new File(getClass().getResource("/sonidos/eliminar.wav").getFile());
            vi.getLienzo2D().setSonidoEliminar(f);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingresa un valor válido para las dimensiones", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_ItemNuevoActionPerformed

    private void ItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemAbrirActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de imagen", "jpg", "png", "bmp", "gif");
        fileChooser.setFileFilter(filter);

        int seleccion = fileChooser.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            try {
                File f = fileChooser.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna();
                vi.getLienzo2D().setImage(img);
                this.escritorio.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al leer la imagen: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        LabelBarraDeEstado.setText("Abrir");
    }//GEN-LAST:event_ItemAbrirActionPerformed

    private void buttonCurvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCurvaActionPerformed
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setHerramientaDibujo(NHerramientaDibujo.curva);
        }
        LabelBarraDeEstado.setText("Curva");
    }//GEN-LAST:event_buttonCurvaActionPerformed

    private void buttonEdicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEdicionActionPerformed
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setMover(buttonEdicion.isSelected());
            lienzo2D.setModoEdicion(buttonEdicion.isSelected());
            buttonBorrar.setSelected(false);
            buttonFijar.setSelected(false);
        }
        LabelBarraDeEstado.setText("Modo edición");
    }//GEN-LAST:event_buttonEdicionActionPerformed

    private void buttonRellenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRellenarActionPerformed
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setRelleno(buttonRellenar.isSelected());
        }
        LabelBarraDeEstado.setText("Relleno");
    }//GEN-LAST:event_buttonRellenarActionPerformed

    private void buttonTransparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTransparenciaActionPerformed
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setTransparencia(buttonTransparencia.isSelected());
        }
        LabelBarraDeEstado.setText("Transparencia");
    }//GEN-LAST:event_buttonTransparenciaActionPerformed

    private void buttonAlisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAlisarActionPerformed
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setAlisar(buttonAlisar.isSelected());
        }
        LabelBarraDeEstado.setText("Alisado");
    }//GEN-LAST:event_buttonAlisarActionPerformed

    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        int grosor = (int) slider.getValue();
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setTrazo(grosor);
        }
        LabelBarraDeEstado.setText("Cambio de grosor");
    }//GEN-LAST:event_sliderStateChanged

    private void buttonColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonColorActionPerformed
        Color color = JColorChooser.showDialog(this, "Elige un color", Color.red);
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setColor(color);
            buttonColor.setBackground(color);
        }
    }//GEN-LAST:event_buttonColorActionPerformed

    private void ItemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemGuardarActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            BufferedImage img = vi.getLienzo2D().getPaintedImage();
            if (img != null) {
                JFileChooser dlg = new JFileChooser();
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos JPG", "jpg", "jpeg");
                dlg.setFileFilter(filter);
                int resp = dlg.showSaveDialog(this);
                if (resp == JFileChooser.APPROVE_OPTION) {
                    try {
                        File f = dlg.getSelectedFile();
                        String extension = getFileExtension(f);
                        ImageIO.write(img, extension, f);
                        vi.setTitle(f.getName());
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Error al guardar la imagen: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_ItemGuardarActionPerformed

    private void buttonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNuevoActionPerformed
        ItemNuevoActionPerformed(evt);
    }//GEN-LAST:event_buttonNuevoActionPerformed

    private void buttonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAbrirActionPerformed
        ItemAbrirActionPerformed(evt);
    }//GEN-LAST:event_buttonAbrirActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        ItemGuardarActionPerformed(evt);
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void escritorioMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_escritorioMouseMoved
        

    }//GEN-LAST:event_escritorioMouseMoved

    private void buttonFijarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFijarActionPerformed
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setModoFijar(buttonFijar.isSelected());
            buttonBorrar.setSelected(false);
            buttonEdicion.setSelected(false);
        }
        LabelBarraDeEstado.setText("Modo fijar");
    }//GEN-LAST:event_buttonFijarActionPerformed

    private void buttonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBorrarActionPerformed
        Lienzo2D lienzo2D = getSelectedLienzo();
        if (lienzo2D != null) {
            lienzo2D.setModoEliminar(buttonBorrar.isSelected());
            buttonFijar.setSelected(false);
            buttonEdicion.setSelected(false);
        }
        LabelBarraDeEstado.setText("Modo borrar");
    }//GEN-LAST:event_buttonBorrarActionPerformed

    private class ManejadorVentanaInterna extends InternalFrameAdapter{
        public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt){
            VentanaInterna vi = (VentanaInterna)evt.getInternalFrame();
            buttonLinea.setSelected(vi.getLienzo2D().getLinea());
            buttonRectangulo.setSelected(vi.getLienzo2D().getRectangulo());
            buttonElipse.setSelected(vi.getLienzo2D().getCurva());
            buttonCurva.setSelected(vi.getLienzo2D().getCurva());
            buttonEdicion.setSelected(vi.getLienzo2D().getModoEdicion());
            buttonFijar.setSelected(vi.getLienzo2D().getModoFijar());
            buttonBorrar.setSelected(vi.getLienzo2D().getModoEliminar());
            buttonRellenar.setSelected(vi.getLienzo2D().isRelleno());
            buttonTransparencia.setSelected(vi.getLienzo2D().getTransparencia());
            buttonAlisar.setSelected(vi.getLienzo2D().getAlisar());
            
                
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ItemAbrir;
    private javax.swing.JMenuItem ItemGuardar;
    private javax.swing.JMenuItem ItemNuevo;
    private javax.swing.JLabel LabelBarraDeEstado;
    private javax.swing.JPanel PanelSur;
    private javax.swing.JToggleButton buttonAbrir;
    private javax.swing.JToggleButton buttonAlisar;
    private javax.swing.JToggleButton buttonBorrar;
    private javax.swing.JButton buttonColor;
    private javax.swing.JToggleButton buttonCurva;
    private javax.swing.JToggleButton buttonEdicion;
    private javax.swing.JToggleButton buttonElipse;
    private javax.swing.JToggleButton buttonFijar;
    private javax.swing.ButtonGroup buttonGroupArchivo;
    private javax.swing.ButtonGroup buttonGroupFiguras;
    private javax.swing.JToggleButton buttonGuardar;
    private javax.swing.JToggleButton buttonLinea;
    private javax.swing.JToggleButton buttonNuevo;
    private javax.swing.JToggleButton buttonRectangulo;
    private javax.swing.JToggleButton buttonRellenar;
    private javax.swing.JToggleButton buttonTransparencia;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JPanel panelBarraEstado;
    private javax.swing.JPanel panelColor;
    private javax.swing.JSlider slider;
    // End of variables declaration//GEN-END:variables
}
